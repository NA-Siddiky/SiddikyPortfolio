{"ast":null,"code":"import React, { useRef, useState, useImperativeHandle, useCallback, useEffect } from 'react';\nimport { PageFlip } from 'page-flip';\nconst HTMLFlipBookForward = React.forwardRef((props, ref) => {\n  const htmlElementRef = useRef(null);\n  const childRef = useRef([]);\n  const pageFlip = useRef();\n  const [pages, setPages] = useState([]);\n  useImperativeHandle(ref, () => ({\n    pageFlip: () => pageFlip.current\n  }));\n  const refreshOnPageDelete = useCallback(() => {\n    if (pageFlip.current) {\n      pageFlip.current.clear();\n    }\n  }, []);\n  const removeHandlers = useCallback(() => {\n    const flip = pageFlip.current;\n\n    if (flip) {\n      flip.off('flip');\n      flip.off('changeOrientation');\n      flip.off('changeState');\n      flip.off('init');\n      flip.off('update');\n    }\n  }, []);\n  useEffect(() => {\n    childRef.current = [];\n\n    if (props.children) {\n      const childList = React.Children.map(props.children, child => {\n        return React.cloneElement(child, {\n          ref: dom => {\n            if (dom) {\n              childRef.current.push(dom);\n            }\n          }\n        });\n      });\n\n      if (!props.renderOnlyPageLengthChange || pages.length !== childList.length) {\n        if (childList.length < pages.length) {\n          refreshOnPageDelete();\n        }\n\n        setPages(childList);\n      }\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [props.children]);\n  useEffect(() => {\n    const setHandlers = () => {\n      const flip = pageFlip.current;\n\n      if (flip) {\n        if (props.onFlip) {\n          flip.on('flip', e => props.onFlip(e));\n        }\n\n        if (props.onChangeOrientation) {\n          flip.on('changeOrientation', e => props.onChangeOrientation(e));\n        }\n\n        if (props.onChangeState) {\n          flip.on('changeState', e => props.onChangeState(e));\n        }\n\n        if (props.onInit) {\n          flip.on('init', e => props.onInit(e));\n        }\n\n        if (props.onUpdate) {\n          flip.on('update', e => props.onUpdate(e));\n        }\n      }\n    };\n\n    if (pages.length > 0 && childRef.current.length > 0) {\n      removeHandlers();\n\n      if (htmlElementRef.current && !pageFlip.current) {\n        pageFlip.current = new PageFlip(htmlElementRef.current, props);\n      }\n\n      if (!pageFlip.current.getFlipController()) {\n        pageFlip.current.loadFromHTML(childRef.current);\n      } else {\n        pageFlip.current.updateFromHtml(childRef.current);\n      }\n\n      setHandlers();\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [pages]);\n  return React.createElement(\"div\", {\n    ref: htmlElementRef,\n    className: props.className,\n    style: props.style\n  }, pages);\n});\nconst HTMLFlipBook = React.memo(HTMLFlipBookForward);\nexport default HTMLFlipBook;","map":{"version":3,"sources":["../src/html-flip-book/index.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, {\n    ReactElement,\n    useCallback,\n    useEffect,\n    useImperativeHandle,\n    useRef,\n    useState,\n} from 'react';\n\nimport { PageFlip } from 'page-flip';\nimport { IFlipSetting, IEventProps } from './settings';\n\ninterface IProps extends IFlipSetting, IEventProps {\n    className: string;\n    style: React.CSSProperties;\n    children: React.ReactNode;\n    renderOnlyPageLengthChange?: boolean;\n}\n\nconst HTMLFlipBookForward = React.forwardRef(\n    (props: IProps, ref: React.MutableRefObject<PageFlip>) => {\n        const htmlElementRef = useRef<HTMLDivElement>(null);\n        const childRef = useRef<HTMLElement[]>([]);\n        const pageFlip = useRef<PageFlip>();\n\n        const [pages, setPages] = useState<ReactElement[]>([]);\n\n        useImperativeHandle(ref, () => ({\n            pageFlip: () => pageFlip.current,\n        }));\n\n        const refreshOnPageDelete = useCallback(() => {\n            if (pageFlip.current) {\n                pageFlip.current.clear();\n            }\n        }, []);\n\n        const removeHandlers = useCallback(() => {\n            const flip = pageFlip.current;\n\n            if (flip) {\n                flip.off('flip');\n                flip.off('changeOrientation');\n                flip.off('changeState');\n                flip.off('init');\n                flip.off('update');\n            }\n        }, []);\n\n        useEffect(() => {\n            childRef.current = [];\n\n            if (props.children) {\n                const childList = React.Children.map(props.children, (child) => {\n                    return React.cloneElement(child as ReactElement, {\n                        ref: (dom) => {\n                            if (dom) {\n                                childRef.current.push(dom);\n                            }\n                        },\n                    });\n                });\n\n                if (!props.renderOnlyPageLengthChange || pages.length !== childList.length) {\n                    if (childList.length < pages.length) {\n                        refreshOnPageDelete();\n                    }\n\n                    setPages(childList);\n                }\n            }\n            // eslint-disable-next-line react-hooks/exhaustive-deps\n        }, [props.children]);\n\n        useEffect(() => {\n            const setHandlers = () => {\n                const flip = pageFlip.current;\n\n                if (flip) {\n                    if (props.onFlip) {\n                        flip.on('flip', (e: unknown) => props.onFlip(e));\n                    }\n\n                    if (props.onChangeOrientation) {\n                        flip.on('changeOrientation', (e: unknown) => props.onChangeOrientation(e));\n                    }\n\n                    if (props.onChangeState) {\n                        flip.on('changeState', (e: unknown) => props.onChangeState(e));\n                    }\n\n                    if (props.onInit) {\n                        flip.on('init', (e: unknown) => props.onInit(e));\n                    }\n\n                    if (props.onUpdate) {\n                        flip.on('update', (e: unknown) => props.onUpdate(e));\n                    }\n                }\n            };\n\n            if (pages.length > 0 && childRef.current.length > 0) {\n                removeHandlers();\n\n                if (htmlElementRef.current && !pageFlip.current) {\n                    pageFlip.current = new PageFlip(htmlElementRef.current, props);\n                }\n\n                if (!pageFlip.current.getFlipController()) {\n                    pageFlip.current.loadFromHTML(childRef.current);\n                } else {\n                    pageFlip.current.updateFromHtml(childRef.current);\n                }\n\n                setHandlers();\n            }\n            // eslint-disable-next-line react-hooks/exhaustive-deps\n        }, [pages]);\n\n        return (\n            <div ref={htmlElementRef} className={props.className} style={props.style}>\n                {pages}\n            </div>\n        );\n    }\n);\n\nexport const HTMLFlipBook = React.memo(HTMLFlipBookForward);\n"]},"metadata":{},"sourceType":"module"}